import React, { useState } from 'react';
import { Link } from 'react-router-dom'; // ‚úÖ ‡¶è‡¶ü‡ßÅ‡¶ï‡ßÅ ‡¶è‡¶ï‡¶¨‡¶æ‡¶∞ import ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá

export default function OfferForm() {
  const [formData, setFormData] = useState({
    type: 'MB',
    price: '',
    name: '',
    duration: '',
    adminPassword: '',
  });

  const [message, setMessage] = useState('');

  const handleChange = e => {
    setFormData({...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = async e => {
    e.preventDefault();
    setMessage('');
    try {
      const res = await fetch('https://bdback-5ofz.onrender.com/api/offers/add', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(formData),
      });

      const data = await res.json();

      if(res.ok){
        setMessage('‡¶Ö‡¶´‡¶æ‡¶∞ ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!');
        setFormData({
          type: 'MB',
          price: '',
          name: '',
          duration: '',
          adminPassword: '',
        });
      } else {
        setMessage(data.message || '‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶≠‡ßÅ‡¶≤ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá');
      }
    } catch (error) {
      setMessage('‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶æ‡¶∞ ‡¶∏‡¶Ç‡¶Ø‡ßã‡¶ó‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá');
    }
  };

  return (
    <>
      <div style={{ textAlign: 'center', marginTop: 20 }}>
        üëâ ‡¶∏‡¶¨ ‡¶Ö‡¶´‡¶æ‡¶∞ ‡¶¶‡ßá‡¶ñ‡¶§‡ßá ‡¶è‡¶ñ‡¶æ‡¶®‡ßá
        <Link to="/OfferList" style={{ textDecoration: 'none', color: 'blue', fontWeight: 'bold' }}>
           ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï 
        </Link>
        ‡¶ï‡¶∞‡ßÅ‡¶®
      </div>

      <div style={{ maxWidth: 400, margin: 'auto', padding: 20, border: '1px solid #ccc', borderRadius: 8 }}>
        <h2>‡¶®‡¶§‡ßÅ‡¶® ‡¶Ö‡¶´‡¶æ‡¶∞ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®</h2>
        <form onSubmit={handleSubmit}>
          <label>
            ‡¶ß‡¶∞‡¶®‡ßá‡¶∞ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶® (MB / Minute):
            <select name="type" value={formData.type} onChange={handleChange} required>
              <option value="MB">MB</option>
              <option value="Minute">Minute</option>
            </select>
          </label><br/><br/>

          <label>
            ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø (‡ß≥):
            <input 
              type="number" 
              name="price" 
              value={formData.price} 
              onChange={handleChange} 
              required 
              min="0"
            />
          </label><br/><br/>

          <label>
            ‡¶Ö‡¶´‡¶æ‡¶∞‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ:
            <input 
              type="text" 
              name="name" 
              value={formData.name} 
              onChange={handleChange} 
              required 
            />
          </label><br/><br/>

          <label>
            ‡¶Æ‡ßá‡ßü‡¶æ‡¶¶ (‡¶Ø‡ßá‡¶Æ‡¶®: 3 ‡¶¶‡¶ø‡¶®):
            <input 
              type="text" 
              name="duration" 
              value={formData.duration} 
              onChange={handleChange} 
              required 
            />
          </label><br/><br/>

          <label>
            ‡¶è‡¶°‡¶Æ‡¶ø‡¶® ‡¶™‡¶æ‡¶∏‡¶ì‡ßü‡¶æ‡¶∞‡ßç‡¶°:
            <input 
              type="password" 
              name="adminPassword" 
              value={formData.adminPassword} 
              onChange={handleChange} 
              required 
            />
          </label><br/><br/>

          <button type="submit">‡¶Ö‡¶´‡¶æ‡¶∞ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®</button>
        </form>
        {message && <p>{message}</p>}
      </div>
    </>
  );
}
